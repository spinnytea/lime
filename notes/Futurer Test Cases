There are 4 main cycles to this development (Knowledge / Action / Patterns / Experience)
 or should it be (Knowledge / Action / Experience / Patterns)
and two follow-on tasks
 one is notably logic and improving on what I already know, the meditative processes
 and the second is not quite defined, but I know it's there; probably something along the lines of abstract processing (a square is a rectangle)

But after all of this, I only see this as being able to "plan", to solve tasks that are planning based
There are other types of tasks.
These are some of those tasks.

The questions we need to answer with all of them is:
1) Do we need low level support?
   - Do we need specialized logic to solve some of them, or can they be emergent within our system.
   - Remember, the LM should be ABLE to solve the problems, not that the LM should address them directly.
2) What would it look like to be able to solve them?
   - is this a paradigm shift?
   - would this be simple to solve if LM addressed this class of problems, instead of planning based ones?
   - LM is basically fancy learning astar in my mind. this might stem from my current progress (Knowledge / Action)

------------------

Turn Saltwater into Freshwater
- this is an outstanding problem in science
- how do we approach this?
- is this a bad example because it hasn't been solve?

That one industrial engineering game I have on Steam
- there's a grid, and you need to build molecules
- it isn't JUST finding the correct steps
- you also need to lay out the board efficiently

Physical Orientation
- those brain teaser puzzles that linked together
- you have to figure out how to put them together or take them apart
